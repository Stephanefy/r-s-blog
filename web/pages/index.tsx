import Head from 'next/head'
import Link from 'next/link'
import Image from 'next/image'
import styled from '@emotion/styled';
import { InferGetStaticPropsType } from 'next';
import { IndexHeaderImg } from '@components/Index';
import { ArticleCard } from '@components/ArticleCard';
import imageUrlBuilder from '@sanity/image-url'
import { SanityImageSource } from '@sanity/image-url/lib/types/types';
import { devices } from '../utils/devices';
import {PortableText} from '@portabletext/react'

import groq from 'groq'
import client from '../client'

const Container = styled.div`
  max-width: 1200px;
  min-height: 100vh;
  padding: 4rem 0;
  margin: auto;
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
`;
const Main = styled.main `
  min-height: 100vh;
  padding: 4rem 0;
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
`;
const BlogTitle= styled.h1`
  margin: 0;
  line-height: 1.15;
  font-size: 4rem;
  color:#blue
`;

const List = styled.ul`
  width: 100%;
  list-style: square;
  margin: auto;
  padding: 0;

`;

const ListItem = styled.li`
  padding: 10px;
  text-transform: capitalize;
  margin: 40px 0;
  cursor: pointer;
  color: #252525;
  &:hover {
    background: #f0f0f0;
  }
`;

const PostInformation = styled.div`
  display: flex;
  flex-direction: column;
`

const PostTitle = styled.h2`
  margin: 0;
  font-size: 24px;
`;


const PostDate = styled.p`
  text-align: left;
  font-size: 0.8em
`

const PostSummary = styled.p`

`


function urlFor (source: SanityImageSource) {

  
  return imageUrlBuilder(client).image(source)
}



export default function Home({ posts }: InferGetStaticPropsType<typeof getStaticProps>) {



  console.log(posts)

  return (
    <Container>
      <Head>
        <title>Lilly à Paris</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Main>
          <BlogTitle>Lilly à Paris</BlogTitle>
          <IndexHeaderImg src='/pexels-viviana-ceballos-3341574.jpg' alt="headerIndex" />
          <List>
          {posts.length > 0 && posts.map(
          ({ _id, 
            title = '', 
            slug, 
            publishedAt = '', 
            mainImage, 
            articleDescription = ''}) =>
            slug && (
              <li key={_id} style={{listStyleType: 'none'}}>
                <Link href="/posts/[slug]" as={`/posts/${slug.current}`}>
                <ArticleCard>
                  <div style={{marginRight:'2em', borderRadius:'20px'}}>
                    <img src={urlFor(mainImage).fit("clip").width(300).height(200).url()} style={{borderRadius: '20px 0 0 20px'}} alt='no image'/>
                  </div>
                  <PostInformation>
                    <PostTitle>
                        <a>{title} {' '}</a>
                    </PostTitle>
                    <PostDate>
                      ({new Date(publishedAt).toDateString()})
                    </PostDate>
                      <span>By Lilly</span>
                    <PostSummary>
                      {articleDescription} 
                    </PostSummary>
                  </PostInformation>
                </ArticleCard>
                </Link>{' '}
              </li>
            )
        )}
        </List>
      </Main>
    </Container>
  )
}

export type Post = {
  userId: number;
  _id: number,
  slug: any,
  publishedAt: Date,
  mainImage: string,
  title: string,
  articleDescription: string,
  body: string
}


export const getStaticProps = async () => {
    const posts: Post[] = await client.fetch(groq`
    *[_type == "post" && publishedAt < now()] | order(publishedAt desc)
  `)

  return {
    props: {
      posts
    }
  }
}